"use strict";const l=require("electron"),p=require("path"),w=require("url"),C=require("electron-store"),a=require("electron-updater"),g=e=>e&&typeof e=="object"&&"default"in e?e:{default:e},E=g(p),D=g(C);l.ipcMain.on("exePath",function(e,u){e.returnValue=E.default.dirname(l.app.getPath("exe"))});l.ipcMain.on("addRecentDocument",function(e,u){console.log(u),e.returnValue=l.app.addRecentDocument(u)});l.ipcMain.on("version",function(e,u){e.returnValue=l.app.getVersion()});l.ipcMain.on("platform",function(e,u){e.returnValue=process.platform});l.ipcMain.on("argv",function(e,u){e.returnValue=process.argv});l.ipcMain.on("__static",function(e,u){e.returnValue=__dirname});l.ipcMain.on("menu.settings",function(e,u){e.reply("menu.settings",u)});l.ipcMain.on("menu.sample",function(e,u){e.reply("menu.sample",u)});l.ipcMain.on("ondragstart",(e,u)=>{e.sender.startDrag({file:u,icon:"/path/to/icon.png"})});const A={file:"File",open:"Open",openRecent:"Open Recent",clearRecent:"Clear",save:"Save",publish:"Publish",language:"Language",settings:"Settings",edit:"Edit",undo:"Undo",redo:"Redo",cut:"Cut",copy:"Copy",paste:"Paste",selectAll:"Select All",reload:"Reload",fileTree:"File tree",closeTab:"Close Current File",reloadFile:"Reload File",toggleFullScreen:"Toggle Full Screen",toggleDevTools:"Toggle Developer Tools",window:"Window",minimize:"Minimize",close:"Close",help:"Help",learnMore:"Learn More",checkUpdate:"Check Update",openWelcomePage:"Open Welcome Page",viewSampleFile:"View Sample File",tutorials:"Tutorials",about:"About ",services:"Services",hide:"Hide ",hideOthers:"Hide Others",showAll:"Show All",quit:"Quit",bringAllToFront:"Bring All to Front",theme:"Theme",light:"Light",dark:"Dark"},k={file:"\u6587\u4EF6",open:"\u6253\u5F00",openRecent:"\u6253\u5F00\u6700\u8FD1\u4F7F\u7528\u7684",clearRecent:"\u6E05\u9664",save:"\u4FDD\u5B58",publish:"\u53D1\u5E03",language:"\u8BED\u8A00",settings:"\u8BBE\u7F6E",edit:"\u7F16\u8F91",undo:"\u64A4\u9500",redo:"\u91CD\u505A",cut:"\u526A\u5207",copy:"\u590D\u5236",paste:"\u7C98\u8D34",selectAll:"\u5168\u9009",reload:"\u91CD\u65B0\u52A0\u8F7D",fileTree:"\u6587\u4EF6\u5217\u8868",closeTab:"\u5173\u95ED\u5F53\u524D\u6587\u4EF6",reloadFile:"\u91CD\u65B0\u8F7D\u5165\u6587\u4EF6",toggleFullScreen:"\u5207\u6362\u5168\u5C4F",toggleDevTools:"\u5207\u6362\u5F00\u53D1\u8005\u5DE5\u5177",window:"\u7A97\u53E3",minimize:"\u6700\u5C0F\u5316",close:"\u5173\u95ED",help:"\u5E2E\u52A9",learnMore:"\u4E86\u89E3\u66F4\u591A",checkUpdate:"\u68C0\u67E5\u66F4\u65B0",openWelcomePage:"\u6253\u5F00\u6B22\u8FCE\u9875",viewSampleFile:"\u67E5\u770B\u793A\u4F8B\u6587\u6863",tutorials:"\u4F7F\u7528\u6559\u7A0B",about:"\u5173\u4E8E",services:"\u670D\u52A1",hide:"\u9690\u85CF",hideOthers:"\u9690\u85CF\u5176\u4ED6",showAll:"\u663E\u793A\u5168\u90E8",quit:"\u9000\u51FA",bringAllToFront:"\u524D\u7F6E\u5168\u90E8\u7A97\u53E3",theme:"\u4E3B\u9898",light:"\u6D45\u8272",dark:"\u6DF1\u8272"},B={name:"settings",cwd:"setting",defaults:{theme:!0,language:"zh"}},c=new D.default(B);function y(){return c.get("language","zh")}function v(e){return c.set("language",e)}function S(){return c.get("theme",!0)}function M(e){return c.set("theme",e)}a.autoUpdater.autoDownload=!1;a.autoUpdater.on("error",e=>{l.dialog.showErrorBox("Error: ",e==null?"unknown":(e.stack||e).toString())});a.autoUpdater.on("update-available",()=>{l.dialog.showMessageBox({type:"info",title:"\u8F6F\u4EF6\u66F4\u65B0",message:"\u53D1\u73B0\u65B0\u7248\u672C\uFF0C\u786E\u5B9A\u66F4\u65B0\uFF1F",buttons:["\u786E\u5B9A","\u53D6\u6D88"]}).then(e=>{e.response===0&&a.autoUpdater.downloadUpdate()})});a.autoUpdater.on("update-not-available",()=>{l.dialog.showMessageBox({title:"\u6CA1\u6709\u53EF\u66F4\u65B0\u7248\u672C",message:"\u5F53\u524D\u7248\u672C\u5DF2\u662F\u6700\u65B0"})});a.autoUpdater.on("update-downloaded",()=>{l.dialog.showMessageBox({title:"\u4E0B\u8F7D\u5B8C\u6210",message:"\u6700\u65B0\u7248\u672C\u5DF2\u4E0B\u8F7D\u5B8C\u6210, \u9000\u51FA\u7A0B\u5E8F\u8FDB\u884C\u5B89\u88C5"}).then(()=>{setImmediate(()=>a.autoUpdater.quitAndInstall())})});function O(){a.autoUpdater.checkForUpdates()}function f(e){const u=e.webContents,r=y(),i=S(),t=r==="zh"?k:A;function m(o){v(o),u.send("menu.language",o),f(e)}function h(o){M(o),u.send("menu.theme",o)}const s=[{label:t.file,submenu:[{label:t.open,accelerator:"CmdOrCtrl+O",click:function(){l.dialog.showOpenDialog(e,{properties:["openFile"],filters:[{name:"Markdown",extensions:["md"]}]}).then(o=>{!o.canceled&&o.filePaths.length>0&&u.send("menu.open",o.filePaths[0])}).catch(o=>{console.log(o)})}},{type:"separator"},{label:t.save,accelerator:"CmdOrCtrl+S",click:function(){u.send("menu.save")}},{label:t.publish,accelerator:"CmdOrCtrl+P",click:function(){u.send("menu.publish")}},{type:"separator"},{label:t.settings,click:function(){u.send("menu.settings")}},{label:t.language,submenu:[{label:"\u7B80\u4F53\u4E2D\u6587",type:"radio",checked:r==="zh",click:function(){m("zh")}},{label:"English",type:"radio",checked:r==="en",click:function(){m("en")}}]}]},{label:t.edit,submenu:[{label:t.undo,accelerator:"CmdOrCtrl+Z",role:"undo"},{label:t.redo,accelerator:"Shift+CmdOrCtrl+Z",role:"redo"},{type:"separator"},{label:t.cut,accelerator:"CmdOrCtrl+X",role:"cut"},{label:t.copy,accelerator:"CmdOrCtrl+C",role:"copy"},{label:t.paste,accelerator:"CmdOrCtrl+V",role:"paste"},{label:t.selectAll,accelerator:"CmdOrCtrl+A",role:"selectall"}]},{label:t.window,role:"window",submenu:[{label:t.fileTree,accelerator:function(){return"Ctrl+Shift+L"}(),click:function(){u.send("menu.showfile")}},{label:t.toggleFullScreen,accelerator:function(){return process.platform==="darwin"?"Ctrl+Command+F":"F11"}(),click:function(o,n){n&&n.setFullScreen(!n.isFullScreen())}},{label:t.minimize,accelerator:"CmdOrCtrl+M",role:"minimize"},{label:t.reloadFile,accelerator:"F5",click:function(){u.send("menu.reloadfile")}},{label:t.closeTab,accelerator:function(){return"Ctrl+F4"}(),click:function(){u.send("menu.closetab")}},{type:"separator"},{label:t.reload,click:function(o,n){n&&n.reload()}},{label:t.toggleDevTools,accelerator:function(){return"Ctrl+Shift+I"}(),click:function(o,n){n&&n.toggleDevTools()}},{type:"separator"},{label:t.close,accelerator:"CmdOrCtrl+W",role:"close"}]},{label:t.theme,role:"theme",submenu:[{label:t.light,type:"radio",checked:i,click:function(){h(!0)}},{label:t.dark,type:"radio",checked:!i,click:function(){h(!1)}}]},{label:t.help,role:"help",submenu:[{label:t.openWelcomePage,click:function(){u.send("menu.welcome")}},{label:t.viewSampleFile,click:function(){u.send("menu.sample")}},{label:t.tutorials,click:function(){l.shell.openExternal("https://gitee.com/xaotuman/push-markdown/blob/master/docs/%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.md")}},{label:t.learnMore,click:function(){l.app.getAppPath(),l.shell.openExternal("https://szx.life/push-markdown%E9%87%8D%E6%9E%84/")}},{type:"separator"},{label:t.checkUpdate,click:function(){O()}},{type:"separator"},{label:t.about,click:function(){l.dialog.showMessageBox({title:"\u5173\u4E8E\u8F6F\u4EF6",icon:"public/app.ico",message:"push-markdown v"+l.app.getVersion(),detail:`Node.js: ${process.versions.node}
Electron: ${process.versions.electron}
Chromium: ${process.versions.chrome}
Platform: ${process.platform}
Install: ${l.app.getAppPath()}

\u4F5C\u8005\uFF1Aszx
\u4F5C\u8005\u535A\u5BA2\uFF1Ahttps://szx.life
\u6E90\u7801\u53D1\u5E03\u5730\u5740\uFF1Ahttps://gitee.com/xaotuman/push-markdown
\u8F6F\u4EF6\u53D1\u5E03\u5730\u5740\uFF1Ahttp://download.szx.life`})}}]}];if(process.platform==="darwin"){const o=l.app.getName();s.unshift({label:o,submenu:[{label:t.about+o,role:"about"},{type:"separator"},{label:t.services,role:"services",submenu:[]},{type:"separator"},{label:t.hide+o,accelerator:"Command+H",role:"hide"},{label:t.hideOthers,accelerator:"Command+Shift+H",role:"hideothers"},{label:t.showAll,role:"unhide"},{type:"separator"},{label:t.quit,accelerator:"Command+Q",click:function(){l.app.quit()}}]});const n=s.find(function(b){return b.role==="window"});n&&n.submenu.push({type:"separator"},{label:t.bringAllToFront,role:"front"})}const F=l.Menu.buildFromTemplate(s);l.Menu.setApplicationMenu(F)}async function T(){const e=new l.BrowserWindow({minHeight:180,minWidth:320,width:1500,height:800,show:!1,webPreferences:{nodeIntegration:!1,contextIsolation:!0,webSecurity:!0,webviewTag:!1,sandbox:!1,preload:p.join(__dirname,"../../preload/dist/index.cjs")}});e.on("ready-to-show",()=>{f(e),e==null||e.show()});const u=new w.URL("../renderer/dist/index.html","file://"+__dirname).toString();return await e.loadURL(u),e}async function d(){let e=l.BrowserWindow.getAllWindows().find(u=>!u.isDestroyed());e===void 0&&(e=await T()),e.isMinimized()&&e.restore(),e.focus()}const U=l.app.requestSingleInstanceLock();U||(l.app.quit(),process.exit(0));l.app.on("second-instance",d);l.app.on("window-all-closed",()=>{process.platform!=="darwin"&&l.app.quit()});l.app.on("activate",()=>{l.BrowserWindow.getAllWindows().length===0&&d()});l.app.whenReady().then(()=>{d(),l.protocol.registerFileProtocol("atom",(e,u)=>{const r=e.url.replace(/^atom:\/\//,""),i=decodeURI(r);try{return u({path:p.normalize(i)})}catch(t){console.error("ERROR: registerLocalResourceProtocol: Could not get file path:",t)}})}).catch(e=>console.error("Failed create window:",e));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
